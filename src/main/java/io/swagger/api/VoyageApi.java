///**
// * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
// * https://github.com/swagger-api/swagger-codegen
// * Do not edit the class manually.
// */
//package io.swagger.api;
//
//import io.swagger.model.Voyage;
//import io.swagger.annotations.*;
//import org.springframework.http.ResponseEntity;
//import org.springframework.validation.annotation.Validated;
//import org.springframework.web.bind.annotation.PathVariable;
//import org.springframework.web.bind.annotation.RequestBody;
//import org.springframework.web.bind.annotation.RequestHeader;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestMethod;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.RequestPart;
//import org.springframework.web.multipart.MultipartFile;
//
//import javax.validation.Valid;
//import javax.validation.constraints.*;
//import java.util.List;
//@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-05-31T18:27:48.019Z")
//
//@Validated
//@Api(value = "voyage", description = "the voyage API")
//@RequestMapping(value = "/victor.matheron/API-Voyage/1.0")
//public interface VoyageApi {
//
//    @ApiOperation(value = "Ajoute un voyage", nickname = "addVoyage", notes = "Ajoute une réservation pour un voyage pouvant concerner un ou plusieurs passagers, avec ou sans arrêts ", tags={ "reservations", })
//    @ApiResponses(value = {
//        @ApiResponse(code = 201, message = "item created"),
//        @ApiResponse(code = 400, message = "invalid input, object invalid"),
//        @ApiResponse(code = 405, message = "Validation exception"),
//        @ApiResponse(code = 409, message = "an existing item already exists"),
//        @ApiResponse(code = 500, message = "internal server error") })
//    @RequestMapping(value = "/voyage",
//        produces = { "application/json" },
//        consumes = { "application/json" },
//        method = RequestMethod.POST)
//    ResponseEntity<Void> addVoyage(@ApiParam(value = "voyage à ajouter" ,required=true )  @Valid @RequestBody Voyage voyage);
//
//
//    @ApiOperation(value = "Update un voyage", nickname = "updateVoyage", notes = "Modifie une réservation pour un voyage ", tags={ "reservations", })
//    @ApiResponses(value = {
//        @ApiResponse(code = 400, message = "Invalid ID supplied"),
//        @ApiResponse(code = 404, message = "Voyage not found"),
//        @ApiResponse(code = 405, message = "Validation exception"),
//        @ApiResponse(code = 500, message = "internal server error") })
//    @RequestMapping(value = "/voyage",
//        produces = { "application/json" },
//        consumes = { "application/json" },
//        method = RequestMethod.PUT)
//    ResponseEntity<Void> updateVoyage(@ApiParam(value = "Voyage devant être mis à jour" ,required=true )  @Valid @RequestBody Voyage voyage);
//
//}
